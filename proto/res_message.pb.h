// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: res_message.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_res_5fmessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_res_5fmessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_res_5fmessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_res_5fmessage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_res_5fmessage_2eproto;
namespace MyMessage {
class DetectRes;
class DetectResDefaultTypeInternal;
extern DetectResDefaultTypeInternal _DetectRes_default_instance_;
}  // namespace MyMessage
PROTOBUF_NAMESPACE_OPEN
template<> ::MyMessage::DetectRes* Arena::CreateMaybeMessage<::MyMessage::DetectRes>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace MyMessage {

// ===================================================================

class DetectRes :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MyMessage.DetectRes) */ {
 public:
  DetectRes();
  virtual ~DetectRes();

  DetectRes(const DetectRes& from);
  DetectRes(DetectRes&& from) noexcept
    : DetectRes() {
    *this = ::std::move(from);
  }

  inline DetectRes& operator=(const DetectRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline DetectRes& operator=(DetectRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DetectRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectRes* internal_default_instance() {
    return reinterpret_cast<const DetectRes*>(
               &_DetectRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DetectRes& a, DetectRes& b) {
    a.Swap(&b);
  }
  inline void Swap(DetectRes* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DetectRes* New() const final {
    return CreateMaybeMessage<DetectRes>(nullptr);
  }

  DetectRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DetectRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DetectRes& from);
  void MergeFrom(const DetectRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DetectRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MyMessage.DetectRes";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_res_5fmessage_2eproto);
    return ::descriptor_table_res_5fmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameIdFieldNumber = 1,
    kMeasurementTimeFieldNumber = 2,
    kLeftTopxFieldNumber = 3,
    kLeftTopyFieldNumber = 4,
    kRightBottomxFieldNumber = 5,
    kRightBottomyFieldNumber = 6,
    kScoreFieldNumber = 7,
  };
  // required string frame_id = 1;
  bool has_frame_id() const;
  private:
  bool _internal_has_frame_id() const;
  public:
  void clear_frame_id();
  const std::string& frame_id() const;
  void set_frame_id(const std::string& value);
  void set_frame_id(std::string&& value);
  void set_frame_id(const char* value);
  void set_frame_id(const char* value, size_t size);
  std::string* mutable_frame_id();
  std::string* release_frame_id();
  void set_allocated_frame_id(std::string* frame_id);
  private:
  const std::string& _internal_frame_id() const;
  void _internal_set_frame_id(const std::string& value);
  std::string* _internal_mutable_frame_id();
  public:

  // required double measurement_time = 2;
  bool has_measurement_time() const;
  private:
  bool _internal_has_measurement_time() const;
  public:
  void clear_measurement_time();
  double measurement_time() const;
  void set_measurement_time(double value);
  private:
  double _internal_measurement_time() const;
  void _internal_set_measurement_time(double value);
  public:

  // required int32 left_topx = 3;
  bool has_left_topx() const;
  private:
  bool _internal_has_left_topx() const;
  public:
  void clear_left_topx();
  ::PROTOBUF_NAMESPACE_ID::int32 left_topx() const;
  void set_left_topx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_left_topx() const;
  void _internal_set_left_topx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 left_topy = 4;
  bool has_left_topy() const;
  private:
  bool _internal_has_left_topy() const;
  public:
  void clear_left_topy();
  ::PROTOBUF_NAMESPACE_ID::int32 left_topy() const;
  void set_left_topy(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_left_topy() const;
  void _internal_set_left_topy(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 right_bottomx = 5;
  bool has_right_bottomx() const;
  private:
  bool _internal_has_right_bottomx() const;
  public:
  void clear_right_bottomx();
  ::PROTOBUF_NAMESPACE_ID::int32 right_bottomx() const;
  void set_right_bottomx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_right_bottomx() const;
  void _internal_set_right_bottomx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 right_bottomy = 6;
  bool has_right_bottomy() const;
  private:
  bool _internal_has_right_bottomy() const;
  public:
  void clear_right_bottomy();
  ::PROTOBUF_NAMESPACE_ID::int32 right_bottomy() const;
  void set_right_bottomy(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_right_bottomy() const;
  void _internal_set_right_bottomy(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required double score = 7;
  bool has_score() const;
  private:
  bool _internal_has_score() const;
  public:
  void clear_score();
  double score() const;
  void set_score(double value);
  private:
  double _internal_score() const;
  void _internal_set_score(double value);
  public:

  // @@protoc_insertion_point(class_scope:MyMessage.DetectRes)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr frame_id_;
  double measurement_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_topx_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_topy_;
  ::PROTOBUF_NAMESPACE_ID::int32 right_bottomx_;
  ::PROTOBUF_NAMESPACE_ID::int32 right_bottomy_;
  double score_;
  friend struct ::TableStruct_res_5fmessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DetectRes

// required string frame_id = 1;
inline bool DetectRes::_internal_has_frame_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool DetectRes::has_frame_id() const {
  return _internal_has_frame_id();
}
inline void DetectRes::clear_frame_id() {
  frame_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DetectRes::frame_id() const {
  // @@protoc_insertion_point(field_get:MyMessage.DetectRes.frame_id)
  return _internal_frame_id();
}
inline void DetectRes::set_frame_id(const std::string& value) {
  _internal_set_frame_id(value);
  // @@protoc_insertion_point(field_set:MyMessage.DetectRes.frame_id)
}
inline std::string* DetectRes::mutable_frame_id() {
  // @@protoc_insertion_point(field_mutable:MyMessage.DetectRes.frame_id)
  return _internal_mutable_frame_id();
}
inline const std::string& DetectRes::_internal_frame_id() const {
  return frame_id_.GetNoArena();
}
inline void DetectRes::_internal_set_frame_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  frame_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DetectRes::set_frame_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  frame_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MyMessage.DetectRes.frame_id)
}
inline void DetectRes::set_frame_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  frame_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MyMessage.DetectRes.frame_id)
}
inline void DetectRes::set_frame_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  frame_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MyMessage.DetectRes.frame_id)
}
inline std::string* DetectRes::_internal_mutable_frame_id() {
  _has_bits_[0] |= 0x00000001u;
  return frame_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DetectRes::release_frame_id() {
  // @@protoc_insertion_point(field_release:MyMessage.DetectRes.frame_id)
  if (!_internal_has_frame_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return frame_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DetectRes::set_allocated_frame_id(std::string* frame_id) {
  if (frame_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  frame_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), frame_id);
  // @@protoc_insertion_point(field_set_allocated:MyMessage.DetectRes.frame_id)
}

// required double measurement_time = 2;
inline bool DetectRes::_internal_has_measurement_time() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DetectRes::has_measurement_time() const {
  return _internal_has_measurement_time();
}
inline void DetectRes::clear_measurement_time() {
  measurement_time_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double DetectRes::_internal_measurement_time() const {
  return measurement_time_;
}
inline double DetectRes::measurement_time() const {
  // @@protoc_insertion_point(field_get:MyMessage.DetectRes.measurement_time)
  return _internal_measurement_time();
}
inline void DetectRes::_internal_set_measurement_time(double value) {
  _has_bits_[0] |= 0x00000002u;
  measurement_time_ = value;
}
inline void DetectRes::set_measurement_time(double value) {
  _internal_set_measurement_time(value);
  // @@protoc_insertion_point(field_set:MyMessage.DetectRes.measurement_time)
}

// required int32 left_topx = 3;
inline bool DetectRes::_internal_has_left_topx() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool DetectRes::has_left_topx() const {
  return _internal_has_left_topx();
}
inline void DetectRes::clear_left_topx() {
  left_topx_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DetectRes::_internal_left_topx() const {
  return left_topx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DetectRes::left_topx() const {
  // @@protoc_insertion_point(field_get:MyMessage.DetectRes.left_topx)
  return _internal_left_topx();
}
inline void DetectRes::_internal_set_left_topx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  left_topx_ = value;
}
inline void DetectRes::set_left_topx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_left_topx(value);
  // @@protoc_insertion_point(field_set:MyMessage.DetectRes.left_topx)
}

// required int32 left_topy = 4;
inline bool DetectRes::_internal_has_left_topy() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool DetectRes::has_left_topy() const {
  return _internal_has_left_topy();
}
inline void DetectRes::clear_left_topy() {
  left_topy_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DetectRes::_internal_left_topy() const {
  return left_topy_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DetectRes::left_topy() const {
  // @@protoc_insertion_point(field_get:MyMessage.DetectRes.left_topy)
  return _internal_left_topy();
}
inline void DetectRes::_internal_set_left_topy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  left_topy_ = value;
}
inline void DetectRes::set_left_topy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_left_topy(value);
  // @@protoc_insertion_point(field_set:MyMessage.DetectRes.left_topy)
}

// required int32 right_bottomx = 5;
inline bool DetectRes::_internal_has_right_bottomx() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool DetectRes::has_right_bottomx() const {
  return _internal_has_right_bottomx();
}
inline void DetectRes::clear_right_bottomx() {
  right_bottomx_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DetectRes::_internal_right_bottomx() const {
  return right_bottomx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DetectRes::right_bottomx() const {
  // @@protoc_insertion_point(field_get:MyMessage.DetectRes.right_bottomx)
  return _internal_right_bottomx();
}
inline void DetectRes::_internal_set_right_bottomx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  right_bottomx_ = value;
}
inline void DetectRes::set_right_bottomx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_right_bottomx(value);
  // @@protoc_insertion_point(field_set:MyMessage.DetectRes.right_bottomx)
}

// required int32 right_bottomy = 6;
inline bool DetectRes::_internal_has_right_bottomy() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool DetectRes::has_right_bottomy() const {
  return _internal_has_right_bottomy();
}
inline void DetectRes::clear_right_bottomy() {
  right_bottomy_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DetectRes::_internal_right_bottomy() const {
  return right_bottomy_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DetectRes::right_bottomy() const {
  // @@protoc_insertion_point(field_get:MyMessage.DetectRes.right_bottomy)
  return _internal_right_bottomy();
}
inline void DetectRes::_internal_set_right_bottomy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  right_bottomy_ = value;
}
inline void DetectRes::set_right_bottomy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_right_bottomy(value);
  // @@protoc_insertion_point(field_set:MyMessage.DetectRes.right_bottomy)
}

// required double score = 7;
inline bool DetectRes::_internal_has_score() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool DetectRes::has_score() const {
  return _internal_has_score();
}
inline void DetectRes::clear_score() {
  score_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline double DetectRes::_internal_score() const {
  return score_;
}
inline double DetectRes::score() const {
  // @@protoc_insertion_point(field_get:MyMessage.DetectRes.score)
  return _internal_score();
}
inline void DetectRes::_internal_set_score(double value) {
  _has_bits_[0] |= 0x00000040u;
  score_ = value;
}
inline void DetectRes::set_score(double value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:MyMessage.DetectRes.score)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace MyMessage

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_res_5fmessage_2eproto
