// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mem_config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mem_5fconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mem_5fconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mem_5fconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mem_5fconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mem_5fconfig_2eproto;
namespace MyMessage {
class MemoryConfig;
class MemoryConfigDefaultTypeInternal;
extern MemoryConfigDefaultTypeInternal _MemoryConfig_default_instance_;
}  // namespace MyMessage
PROTOBUF_NAMESPACE_OPEN
template<> ::MyMessage::MemoryConfig* Arena::CreateMaybeMessage<::MyMessage::MemoryConfig>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace MyMessage {

// ===================================================================

class MemoryConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MyMessage.MemoryConfig) */ {
 public:
  MemoryConfig();
  virtual ~MemoryConfig();

  MemoryConfig(const MemoryConfig& from);
  MemoryConfig(MemoryConfig&& from) noexcept
    : MemoryConfig() {
    *this = ::std::move(from);
  }

  inline MemoryConfig& operator=(const MemoryConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline MemoryConfig& operator=(MemoryConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MemoryConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MemoryConfig* internal_default_instance() {
    return reinterpret_cast<const MemoryConfig*>(
               &_MemoryConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MemoryConfig& a, MemoryConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(MemoryConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MemoryConfig* New() const final {
    return CreateMaybeMessage<MemoryConfig>(nullptr);
  }

  MemoryConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MemoryConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MemoryConfig& from);
  void MergeFrom(const MemoryConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MemoryConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MyMessage.MemoryConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mem_5fconfig_2eproto);
    return ::descriptor_table_mem_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemoryKeyFieldNumber = 1,
    kMemorySizeFieldNumber = 2,
    kResShiftFieldNumber = 3,
    kSemaporeKeyFieldNumber = 4,
  };
  // optional int32 MemoryKey = 1 [default = 123456];
  bool has_memorykey() const;
  private:
  bool _internal_has_memorykey() const;
  public:
  void clear_memorykey();
  ::PROTOBUF_NAMESPACE_ID::int32 memorykey() const;
  void set_memorykey(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_memorykey() const;
  void _internal_set_memorykey(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 MemorySize = 2 [default = 12582912];
  bool has_memorysize() const;
  private:
  bool _internal_has_memorysize() const;
  public:
  void clear_memorysize();
  ::PROTOBUF_NAMESPACE_ID::int32 memorysize() const;
  void set_memorysize(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_memorysize() const;
  void _internal_set_memorysize(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 ResShift = 3 [default = 10485760];
  bool has_resshift() const;
  private:
  bool _internal_has_resshift() const;
  public:
  void clear_resshift();
  ::PROTOBUF_NAMESPACE_ID::int32 resshift() const;
  void set_resshift(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_resshift() const;
  void _internal_set_resshift(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 SemaporeKey = 4 [default = 1234];
  bool has_semaporekey() const;
  private:
  bool _internal_has_semaporekey() const;
  public:
  void clear_semaporekey();
  ::PROTOBUF_NAMESPACE_ID::int32 semaporekey() const;
  void set_semaporekey(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_semaporekey() const;
  void _internal_set_semaporekey(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MyMessage.MemoryConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 memorykey_;
  ::PROTOBUF_NAMESPACE_ID::int32 memorysize_;
  ::PROTOBUF_NAMESPACE_ID::int32 resshift_;
  ::PROTOBUF_NAMESPACE_ID::int32 semaporekey_;
  friend struct ::TableStruct_mem_5fconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MemoryConfig

// optional int32 MemoryKey = 1 [default = 123456];
inline bool MemoryConfig::_internal_has_memorykey() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MemoryConfig::has_memorykey() const {
  return _internal_has_memorykey();
}
inline void MemoryConfig::clear_memorykey() {
  memorykey_ = 123456;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MemoryConfig::_internal_memorykey() const {
  return memorykey_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MemoryConfig::memorykey() const {
  // @@protoc_insertion_point(field_get:MyMessage.MemoryConfig.MemoryKey)
  return _internal_memorykey();
}
inline void MemoryConfig::_internal_set_memorykey(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  memorykey_ = value;
}
inline void MemoryConfig::set_memorykey(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_memorykey(value);
  // @@protoc_insertion_point(field_set:MyMessage.MemoryConfig.MemoryKey)
}

// optional int32 MemorySize = 2 [default = 12582912];
inline bool MemoryConfig::_internal_has_memorysize() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MemoryConfig::has_memorysize() const {
  return _internal_has_memorysize();
}
inline void MemoryConfig::clear_memorysize() {
  memorysize_ = 12582912;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MemoryConfig::_internal_memorysize() const {
  return memorysize_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MemoryConfig::memorysize() const {
  // @@protoc_insertion_point(field_get:MyMessage.MemoryConfig.MemorySize)
  return _internal_memorysize();
}
inline void MemoryConfig::_internal_set_memorysize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  memorysize_ = value;
}
inline void MemoryConfig::set_memorysize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_memorysize(value);
  // @@protoc_insertion_point(field_set:MyMessage.MemoryConfig.MemorySize)
}

// optional int32 ResShift = 3 [default = 10485760];
inline bool MemoryConfig::_internal_has_resshift() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MemoryConfig::has_resshift() const {
  return _internal_has_resshift();
}
inline void MemoryConfig::clear_resshift() {
  resshift_ = 10485760;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MemoryConfig::_internal_resshift() const {
  return resshift_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MemoryConfig::resshift() const {
  // @@protoc_insertion_point(field_get:MyMessage.MemoryConfig.ResShift)
  return _internal_resshift();
}
inline void MemoryConfig::_internal_set_resshift(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  resshift_ = value;
}
inline void MemoryConfig::set_resshift(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_resshift(value);
  // @@protoc_insertion_point(field_set:MyMessage.MemoryConfig.ResShift)
}

// optional int32 SemaporeKey = 4 [default = 1234];
inline bool MemoryConfig::_internal_has_semaporekey() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MemoryConfig::has_semaporekey() const {
  return _internal_has_semaporekey();
}
inline void MemoryConfig::clear_semaporekey() {
  semaporekey_ = 1234;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MemoryConfig::_internal_semaporekey() const {
  return semaporekey_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MemoryConfig::semaporekey() const {
  // @@protoc_insertion_point(field_get:MyMessage.MemoryConfig.SemaporeKey)
  return _internal_semaporekey();
}
inline void MemoryConfig::_internal_set_semaporekey(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  semaporekey_ = value;
}
inline void MemoryConfig::set_semaporekey(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_semaporekey(value);
  // @@protoc_insertion_point(field_set:MyMessage.MemoryConfig.SemaporeKey)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace MyMessage

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mem_5fconfig_2eproto
